Sort an array of 0s, 1s and 2s
EasyAccuracy: 51.36%Submissions: 100k+Points: 2
Lamp
This problem is part of GFG SDE Sheet. Click here to view more.  
Given an array of size N containing only 0s, 1s, and 2s; sort the array in ascending order.





//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;



// } Driver Code Ends
class Solution
{
    public:
    void sort012(int arr[], int n)
    {
        int pos=0,pos1=0,pos2=0,pos3=0;
        for(int i=0;i<n;i++)
        {
            if(arr[i]==0)
            pos=pos+1;
            else  if(arr[i]==1)
            pos1=pos1+1;
            else
            pos2=pos2+1;
            
        }
        while(pos--)
        arr[pos3++]=0;
        while(pos1--)
        arr[pos3++]=1;
        while(pos2--)
        arr[pos3++]=2;
    }
    
};

//{ Driver Code Starts.
int main() {

    int t;
    cin >> t;

    while(t--){
        int n;
        cin >>n;
        int a[n];
        for(int i=0;i<n;i++){
            cin >> a[i];
        }

        Solution ob;
        ob.sort012(a, n);

        for(int i=0;i<n;i++){
            cout << a[i]  << " ";
        }

        cout << endl;
        
        
    }
    return 0;
}


// } Driver Code Ends
